CREATE TABLE DEVELOPER_MAPPING ( 
    ID         INTEGER PRIMARY KEY,
    USER_ID    INTEGER NOT NULL,
    PROJECT_ID INTEGER NOT NULL,
    POINTS     INTEGER NOT NULL,
    FOREIGN KEY ( USER_ID ) REFERENCES USER ( ID ) ON DELETE CASCADE
                                                       ON UPDATE CASCADE,
    FOREIGN KEY ( PROJECT_ID ) REFERENCES PROJECT ( ID ) ON DELETE CASCADE
                                                             ON UPDATE CASCADE 
);

CREATE TABLE PROJECT ( 
    ID          INTEGER         NOT NULL,
    NAME        VARCHAR( 50 )   NOT NULL,
    DESCRIPTION VARCHAR( 300 ),
    MANAGER_ID  INTEGER         NOT NULL,
    CONSTRAINT Pk_PROJECT PRIMARY KEY ( ID ),
    FOREIGN KEY ( MANAGER_ID ) REFERENCES USER ( ID ) ON DELETE CASCADE
                                                          ON UPDATE CASCADE 
);

CREATE TABLE REQUIREMENT ( 
    ID          INTEGER         PRIMARY KEY,
    TITLE       VARCHAR( 50 )   NOT NULL,
    DESCRIPTION VARCHAR( 200 ),
    PRIORITY    INTEGER         NOT NULL,
    RISK        INTEGER         NOT NULL,
    PROJECT_ID  INTEGER         NOT NULL,
    COMPLETED   BOOLEAN         NOT NULL
                                DEFAULT false,
    FOREIGN KEY ( PROJECT_ID ) REFERENCES PROJECT ( ID ) ON DELETE CASCADE
                                                             ON UPDATE CASCADE 
);

CREATE TABLE SPRINT ( 
    ID              INTEGER PRIMARY KEY,
    PROJECT_ID      INTEGER NOT NULL,
    NUMBER          INTEGER NOT NULL,
    START_DATE      DATE    NOT NULL,
    END_DATE        DATE    NOT NULL,
    TASKS_COMPLETED INTEGER,
    TASKS_TOTAL     INTEGER,
    HOURS_SPENT     INTEGER,
    HOURS_ESTIMATED INTEGER,
    FOREIGN KEY ( PROJECT_ID ) REFERENCES PROJECT ( ID ) ON DELETE CASCADE
                                                             ON UPDATE CASCADE 
);

CREATE TABLE TASK ( 
    ID              INTEGER         PRIMARY KEY,
    TITLE           VARCHAR( 50 )   NOT NULL,
    DESCRIPTION     VARCHAR( 200 ),
    POINTS          INTEGER         NOT NULL,
    HOURS_ESTIMATED INTEGER,
    HOURS_SPENT     INTEGER,
    PROGRESS        VARCHAR( 20 )   NOT NULL,
    LAST_MODIFIED   TIMESTAMP       DEFAULT CURRENT_TIMESTAMP
                                    NOT NULL,
    SPRINT_ID       INTEGER,
    REQUIREMENT_ID  INTEGER         NOT NULL,
    USER_ID         INTEGER,
    FOREIGN KEY ( SPRINT_ID ) REFERENCES SPRINT ( ID ) ON DELETE CASCADE
                                                           ON UPDATE CASCADE,
    FOREIGN KEY ( REQUIREMENT_ID ) REFERENCES REQUIREMENT ( ID ) ON DELETE CASCADE
                                                                     ON UPDATE CASCADE,
    CONSTRAINT chk_PROGRESS FOREIGN KEY ( USER_ID ) REFERENCES USER ( ID ) ON DELETE CASCADE
                                                                               ON UPDATE CASCADE,
    CHECK ( PROGRESS IN ( 'New', 'In progress', 'Completed' )  ) 
);

CREATE TABLE TASK_LOG ( 
    id              INTEGER   PRIMARY KEY,
    task_id         INTEGER   NOT NULL,
    hours_estimated INTEGER,
    hours_spent     INTEGER,
    task_timestamp  TIMESTAMP DEFAULT CURRENT_TIMESTAMP 
    FOREIGN KEY ( TASK_ID ) REFERENCES TASK ( ID ) ON DELETE CASCADE
                                                           ON UPDATE CASCADE,
);

CREATE TABLE USER ( 
    ID         INTEGER         NOT NULL,
    EMAIL      VARCHAR( 50 )   NOT NULL
                               UNIQUE,
    PASSWORD   VARCHAR( 100 )  NOT NULL,
    SALT       VARCHAR( 100 )  NOT NULL,
    FIRST_NAME VARCHAR( 20 ),
    LAST_NAME  VARCHAR( 30 ),
    CONSTRAINT Pk_USER PRIMARY KEY ( ID ) 
);