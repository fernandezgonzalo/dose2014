INCLUDE_PATH =  -I"C:\Program Files\Eiffel Software\EiffelStudio 14.05 GPL\unstable\library\persistency\database\sqlite3\spec\include" -I"-DSQLITE_THREADSAFE=0"
SHELL = \bin\sh
CC = cl
CPP = cl
CFLAGS = -Ox -MT -w -nologo -D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_CRT_SECURE_NO_DEPRECATE -D_UNICODE -DUNICODE   -DEIF_IEEE_BEHAVIOR -I"C:\Program Files\Eiffel Software\EiffelStudio 14.05 GPL\studio\spec\win64\include" -I. $(INCLUDE_PATH)
CPPFLAGS = -Ox -MT -w -nologo -D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_CRT_SECURE_NO_DEPRECATE -D_UNICODE -DUNICODE   -I"C:\Program Files\Eiffel Software\EiffelStudio 14.05 GPL\studio\spec\win64\include" -I. $(INCLUDE_PATH)
LDFLAGS = -STACK:5000000 -NODEFAULTLIB:libc
CCLDFLAGS = -STACK:5000000 -NODEFAULTLIB:libc  -SUBSYSTEM:WINDOWS
LDSHAREDFLAGS =  -dll -incremental:no -NODEFAULTLIB:libc
EIFLIB = "C:\Program Files\Eiffel Software\EiffelStudio 14.05 GPL\studio\spec\win64\lib\msc\finalized.lib"
EIFTEMPLATES = C:\Program Files\Eiffel Software\EiffelStudio 14.05 GPL\studio\config\win64\templates
LIBS = 
MAKE = nmake -s -nologo
AR = 
LD = 
MKDEP =   --
MV = copy
CP = copy
RANLIB = echo
RM = del
FILE_EXIST = if exist
RMDIR = rd
X2C = "C:\Program Files\Eiffel Software\EiffelStudio 14.05 GPL\studio\spec\win64\bin\x2c.exe"
SHAREDLINK = link
SHAREDLIBS = USER32.lib WS2_32.lib ADVAPI32.lib GDI32.lib SHELL32.lib MSIMG32.lib \
	COMDLG32.lib UUID.lib OLE32.lib OLEAUT32.lib COMCTL32.lib MPR.LIB SHLWAPI.LIB WINSPOOL.LIB 
SHARED_SUFFIX = .dll
COMMAND_MAKEFILE = 
START_TEST = if not exist finished 
END_TEST =  
CREATE_TEST = echo "finished" >> finished 
SYSTEM_IN_DYNAMIC_LIB = WBPMS.dll 
.SUFFIXES: .x .xpp .cpp .obj 

.c.obj:
	$(CC) $(CFLAGS) -c $<

.cpp.obj:
	$(CPP) $(CPPFLAGS) -c $<

.x.obj:
	$(X2C) $< $*.c
	$(CC) $(CFLAGS) -c $*.c
	$(RM) $*.c

.xpp.obj:
	$(X2C) $< $*.cpp
	$(CPP) $(CPPFLAGS) -c $*.cpp
	$(RM) $*.cpp

.x.c:
	$(X2C) $< $*.c

.xpp.cpp:
	$(X2C) $< $*.cpp

SUBDIRS = C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C12 C13 C14 C15 C16 C17 C18 C19 E1 E2

EXTERNALS =  \
	"C:\Program Files\Eiffel Software\EiffelStudio 14.05 GPL\library\net\spec\msc\win64\lib\net.lib" \
	"C:\Program Files\Eiffel Software\EiffelStudio 14.05 GPL\unstable\library\persistency\database\sqlite3\spec\msc\win64\lib\esqlite.lib"

all:: WBPMS.exe
	echo done > completed.eif

C1\Cobj1.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C1
	$(START_TEST) $(MAKE) Cobj1.lib $(END_TEST)
	cd ..

C2\Cobj2.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C2
	$(START_TEST) $(MAKE) Cobj2.lib $(END_TEST)
	cd ..

C3\Cobj3.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C3
	$(START_TEST) $(MAKE) Cobj3.lib $(END_TEST)
	cd ..

C4\Cobj4.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C4
	$(START_TEST) $(MAKE) Cobj4.lib $(END_TEST)
	cd ..

C5\Cobj5.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C5
	$(START_TEST) $(MAKE) Cobj5.lib $(END_TEST)
	cd ..

C6\Cobj6.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C6
	$(START_TEST) $(MAKE) Cobj6.lib $(END_TEST)
	cd ..

C7\Cobj7.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C7
	$(START_TEST) $(MAKE) Cobj7.lib $(END_TEST)
	cd ..

C8\Cobj8.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C8
	$(START_TEST) $(MAKE) Cobj8.lib $(END_TEST)
	cd ..

C9\Cobj9.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C9
	$(START_TEST) $(MAKE) Cobj9.lib $(END_TEST)
	cd ..

C10\Cobj10.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C10
	$(START_TEST) $(MAKE) Cobj10.lib $(END_TEST)
	cd ..

C11\Cobj11.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C11
	$(START_TEST) $(MAKE) Cobj11.lib $(END_TEST)
	cd ..

C12\Cobj12.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C12
	$(START_TEST) $(MAKE) Cobj12.lib $(END_TEST)
	cd ..

C13\Cobj13.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C13
	$(START_TEST) $(MAKE) Cobj13.lib $(END_TEST)
	cd ..

C14\Cobj14.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C14
	$(START_TEST) $(MAKE) Cobj14.lib $(END_TEST)
	cd ..

C15\Cobj15.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C15
	$(START_TEST) $(MAKE) Cobj15.lib $(END_TEST)
	cd ..

C16\Cobj16.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C16
	$(START_TEST) $(MAKE) Cobj16.lib $(END_TEST)
	cd ..

C17\Cobj17.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C17
	$(START_TEST) $(MAKE) Cobj17.lib $(END_TEST)
	cd ..

C18\Cobj18.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C18
	$(START_TEST) $(MAKE) Cobj18.lib $(END_TEST)
	cd ..

C19\Cobj19.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd C19
	$(START_TEST) $(MAKE) Cobj19.lib $(END_TEST)
	cd ..

E1\emain.obj:  Makefile E1\Makefile
	$(CP) "$(EIFTEMPLATES)\emain.template" "E1\emain.c"
	cd E1
	$(START_TEST) $(MAKE) emain.obj  $(END_TEST)
	cd ..

E1\estructure.h: E1\estructure.x
	$(X2C) E1\estructure.x E1\estructure.h

E1\eoffsets.h: E1\eoffsets.x
	$(X2C) E1\eoffsets.x E1\eoffsets.h

E1\eref.obj : Makefile E1\Makefile E1\estructure.h E1\eoffsets.h
	cd E1
	$(START_TEST) $(MAKE) eref.obj  $(END_TEST)
	cd ..

E1\epoly.obj : Makefile E1\Makefile E1\estructure.h E1\eoffsets.h
	cd E1
	$(START_TEST) $(MAKE) epoly.obj  $(END_TEST)
	cd ..

E1\esize.obj : Makefile E1\Makefile E1\estructure.h E1\eoffsets.h
	cd E1
	$(START_TEST) $(MAKE) esize.obj  $(END_TEST)
	cd ..

E1\eplug.obj : Makefile E1\Makefile E1\estructure.h E1\eoffsets.h
	cd E1
	$(START_TEST) $(MAKE) eplug.obj  $(END_TEST)
	cd ..

E1\eskelet.obj : Makefile E1\Makefile E1\estructure.h E1\eoffsets.h
	cd E1
	$(START_TEST) $(MAKE) eskelet.obj  $(END_TEST)
	cd ..

E1\enames.obj : Makefile E1\Makefile E1\estructure.h E1\eoffsets.h
	cd E1
	$(START_TEST) $(MAKE) enames.obj  $(END_TEST)
	cd ..

E1\evisib.obj : Makefile E1\Makefile E1\estructure.h E1\eoffsets.h
	cd E1
	$(START_TEST) $(MAKE) evisib.obj  $(END_TEST)
	cd ..

E1\ececil.obj : Makefile E1\Makefile E1\estructure.h E1\eoffsets.h
	cd E1
	$(START_TEST) $(MAKE) ececil.obj  $(END_TEST)
	cd ..

E1\einit.obj : Makefile E1\Makefile E1\estructure.h E1\eoffsets.h
	cd E1
	$(START_TEST) $(MAKE) einit.obj  $(END_TEST)
	cd ..

E1\eparents.obj : Makefile E1\Makefile E1\estructure.h E1\eoffsets.h
	cd E1
	$(START_TEST) $(MAKE) eparents.obj  $(END_TEST)
	cd ..

E2\Eobj2.lib: Makefile E1\estructure.h E1\eoffsets.h
	cd E2
	$(START_TEST) $(MAKE) Eobj2.lib $(END_TEST)
	cd ..

OBJECTS = E2\Eobj2.lib E1\eparents.obj  E1\einit.obj  E1\ececil.obj  E1\evisib.obj  E1\enames.obj  E1\eskelet.obj  E1\eplug.obj  E1\esize.obj  E1\epoly.obj  E1\eref.obj  C19\Cobj19.lib C18\Cobj18.lib C17\Cobj17.lib C16\Cobj16.lib C15\Cobj15.lib C14\Cobj14.lib C13\Cobj13.lib C12\Cobj12.lib C11\Cobj11.lib C10\Cobj10.lib C9\Cobj9.lib C8\Cobj8.lib C7\Cobj7.lib C6\Cobj6.lib C5\Cobj5.lib C4\Cobj4.lib C3\Cobj3.lib C2\Cobj2.lib C1\Cobj1.lib 

C_OBJECTS = C19\Cobj19.lib C18\Cobj18.lib C17\Cobj17.lib C16\Cobj16.lib C15\Cobj15.lib C14\Cobj14.lib C13\Cobj13.lib C12\Cobj12.lib C11\Cobj11.lib C10\Cobj10.lib C9\Cobj9.lib C8\Cobj8.lib C7\Cobj7.lib C6\Cobj6.lib C5\Cobj5.lib C4\Cobj4.lib C3\Cobj3.lib C2\Cobj2.lib C1\Cobj1.lib 

EOBJECTS = E2\Eobj2.lib E1\eparents.obj  E1\einit.obj  E1\ececil.obj  E1\evisib.obj  E1\enames.obj  E1\eskelet.obj  E1\eplug.obj  E1\esize.obj  E1\epoly.obj  E1\eref.obj  




WBPMS.exe: WBPMS.lnk WBPMS.res
	$(COMMAND_MAKEFILE)
	link @WBPMS.lnk

..\..\..\WBPMS.rc:
	if not exist ..\..\..\WBPMS.rc $(MV) "C:\Program Files\Eiffel Software\EiffelStudio 14.05 GPL\studio\config\win64\msc\eiffel.rc" ..\..\..\WBPMS.rc

WBPMS.res: ..\..\..\WBPMS.rc Makefile
	rc -r -foWBPMS.res ..\..\..\WBPMS.rc

WBPMS.lnk: $(OBJECTS) e1\emain.obj WBPMS.res Makefile
	if exist $@ $(RM) $@
	@echo $(LDFLAGS) $(CCLDFLAGS) -OUT:WBPMS.exe >> $@
	@echo e1\emain.obj >> $@
	@echo $(EIFLIB) $(EXTERNALS) >> $@
	@echo USER32.lib WS2_32.lib ADVAPI32.lib GDI32.lib SHELL32.lib MSIMG32.lib \
	COMDLG32.lib UUID.lib OLE32.lib OLEAUT32.lib COMCTL32.lib MPR.LIB SHLWAPI.LIB WINSPOOL.LIB $(ISE_SHAREDLIBS) $(PRECOMP_OBJECTS) >> $@
	@echo WBPMS.res >> $@
	echo E2\Eobj2.lib E1\eparents.obj  E1\einit.obj  E1\ececil.obj  E1\evisib.obj   >> $@ 
	echo E1\enames.obj  E1\eskelet.obj  E1\eplug.obj  E1\esize.obj  E1\epoly.obj   >> $@ 
	echo E1\eref.obj  C19\Cobj19.lib C18\Cobj18.lib C17\Cobj17.lib C16\Cobj16.lib  >> $@ 
	echo C15\Cobj15.lib C14\Cobj14.lib C13\Cobj13.lib C12\Cobj12.lib C11\Cobj11.lib  >> $@ 
	echo C10\Cobj10.lib C9\Cobj9.lib C8\Cobj8.lib C7\Cobj7.lib C6\Cobj6.lib  >> $@ 
	echo C5\Cobj5.lib C4\Cobj4.lib C3\Cobj3.lib C2\Cobj2.lib C1\Cobj1.lib  >> $@ 


RCECIL = malloc.obj garcol.obj local.obj except.obj store.obj retrieve.obj hash.obj \
	traverse.obj hashin.obj tools.obj internal.obj plug.obj copy.obj equal.obj \
	lmalloc.obj out.obj timer.obj urgent.obj sig.obj hector.obj cecil.obj file.obj dir.obj \
	misc.obj error.obj umain.obj memory.obj argv.obj boolstr.obj search.obj main.obj \
	run_idr.obj compress.obj console.obj path_name.obj object_id.obj option.obj \
	eif_threads.obj gen_conf.obj eif_type_id.obj rout_obj.obj eif_project.obj \
	idrs.obj posix_threads.obj memory_analyzer.obj offset.obj 


#STATIC_CECIL PART
STATIC_CECIL = libWBPMS.lib
cecil: $(STATIC_CECIL)
$(STATIC_CECIL): $(OBJECTS) $(EIFLIB) 
	if exist $@ $(RM) $@
	lib -nologo -OUT:$(STATIC_CECIL) $(OBJECTS) $(EXTERNALS) $(EIFLIB) $(PRECOMP_OBJECTS)



#SHARED_CECIL PART
SHARED_CECIL = libWBPMS$(SHARED_SUFFIX)
dynamic_cecil: $(SHARED_CECIL) 
DEF_FILE= c_WBPMS.def 
c_WBPMS.def: 
	if exist $@ $(RM) $@
	echo LIBRARY libWBPMS.dll > $@
	type "C:\Program Files\Eiffel Software\EiffelStudio 14.05 GPL\studio\config\win64\templates\cecil.def"  >> $@

SHARED_CECIL_OBJECT = $(OBJECTS) \
		E1/emain.obj
SHAREDFLAGS = $(LDSHAREDFLAGS) \
	/def:$(DEF_FILE) \
	/OUT:$(SHARED_CECIL) /IMPLIB:c_dll_WBPMS.lib

$(SHARED_CECIL): $(SHARED_CECIL_OBJECT)  $(DEF_FILE)
	if exist $(SHARED_CECIL) del $(SHARED_CECIL)
	$(SHAREDLINK) $(SHAREDFLAGS) $(SHARED_CECIL_OBJECT) $(PRECOMP_OBJECTS) $(EXTERNALS) $(EIFLIB) $(SHAREDLIBS) 

#SYSTEM_IN_DYNAMIC_LIB PART

DEF_FILE= WBPMS.def
dynlib: $(SYSTEM_IN_DYNAMIC_LIB) 
E1\egc_dynlib.obj: Makefile E1\Makefile
	$(CP) "$(EIFTEMPLATES)\egc_dynlib.template" E1\egc_dynlib.c
	cd E1
	$(MAKE) egc_dynlib.obj
	cd ..
E1\edynlib.obj: Makefile E1\Makefile E1\edynlib.c 
	cd E1
	$(MAKE) edynlib.obj
	cd ..

SYSTEM_IN_DYNAMIC_LIB_OBJ = $(OBJECTS) \
		E1\edynlib.obj E1\egc_dynlib.obj 
DYNLIBSHAREDFLAGS = $(LDSHAREDFLAGS) \
	/def:$(DEF_FILE) \
	/OUT:$(SYSTEM_IN_DYNAMIC_LIB) /IMPLIB:dll_WBPMS.lib WBPMS.res

$(SYSTEM_IN_DYNAMIC_LIB): $(SYSTEM_IN_DYNAMIC_LIB_OBJ)  $(DEF_FILE)
	if exist $(SYSTEM_IN_DYNAMIC_LIB) del $(SYSTEM_IN_DYNAMIC_LIB)
	$(SHAREDLINK) $(DYNLIBSHAREDFLAGS) $(SYSTEM_IN_DYNAMIC_LIB_OBJ) $(PRECOMP_OBJECTS) $(EXTERNALS) $(EIFLIB) $(SHAREDLIBS) 



clean: sub_clean local_clean
clobber: sub_clobber local_clobber

local_clean::
	$(RM) core finished *.obj *.so *.a

local_clobber:: local_clean
	$(RM) Makefile config.sh finish_freezing

sub_clean::
	for i in $(SUBDIRS); \
	do \
		if [ -r $$i\Makefile ]; then \
			(cd $$i ; $(MAKE) clean); \
		fi; \
	done

sub_clobber::
	for i in $(SUBDIRS); \
	do \
		if [ -r $$i\Makefile ]; then \
			(cd $$i ; $(MAKE) clobber); \
		fi; \
	done

